{"version":3,"sources":["reducer/index.js","store.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","components/weather-service-context/weather-service-context.js","services/index.js","services/weather-service.js","components/header/index.js","components/header/header.js","actions/index.js","components/form-weather/form-weather.js","components/form-weather/index.js","components/spinner/index.js","components/spinner/spinner.js","components/hoc/index.js","components/hoc/with-weather-service.js","components/current-weather/current-weather.js","components/current-weather/index.js","components/weather-page/index.js","components/weather-page/weather-page.js","components/five-days-weather/five-days-weather.js","components/five-days-weather/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["initialState","data","multiData","inputCityValue","city","loading","error","reducer","state","action","type","payload","store","createStore","ErrorIndicator","ErrorBoundry","hasError","this","setState","children","props","Component","React","createContext","WeatherServiceProvider","Provider","WeatherServiceConsumer","Consumer","WeatherService","_apiBase","_apiKey","getResource","url","a","fetch","res","ok","Error","status","json","fetchCurrentWeather","_transformCurrentWeather","fetchFiveDaysWeather","list","map","_transformFiveDaysWeather","id","name","time","dt","temp","Math","round","main","pressure","humidity","clouds","weather","description","cloudsIcon","icon","wind","speed","dt_txt","Header","className","weatherRequest","weatherError","mapDispatchToProps","onChangeInputCity","e","target","value","onSumbitCity","FormWeather","connect","onSubmit","evt","preventDefault","onChange","Spinner","withWeatherService","Wrapped","weatherService","CurrentWeather","src","alt","timeStamp","date","Date","hour","getHours","minutes","getMinutes","getWeatherTime","to","CurrentWeatherContainer","prevProps","then","getCurrentWeather","catch","length","currentWeather","WeatherPage","FiveDaysWeather","getFiveDaysWeather","role","item","idx","key","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a3a1280.chunk.js","sourcesContent":["const initialState = {\r\n  data: [],\r\n  multiData: [],\r\n  inputCityValue: 'Kyiv',\r\n  city: null,\r\n  loading: false,\r\n  error: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'FETCH_WEATHER_REQUEST':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n\r\n    case 'FETCH_CURRENT_WEATHER':\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        loading: false,\r\n        error: false,\r\n      };\r\n\r\n    case 'FETCH_FIVE_DAYS_WEATHER':\r\n      return {\r\n        ...state,\r\n        multiData: action.payload,\r\n        loading: false,\r\n        error: false,\r\n      };\r\n\r\n    case 'FETCH_WEATHER_FAILURE':\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true,\r\n      };\r\n\r\n    case 'ON_CHANGE_INPUT_CITY':\r\n      return {\r\n        ...state,\r\n        inputCityValue: action.payload,\r\n      };\r\n\r\n    case 'ON_SUBMIT_CITY':\r\n      return {\r\n        ...state,\r\n        city: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\n\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import ErrorIndicator from \"./error-indicator\";\r\n\r\nexport default ErrorIndicator;\r\n","import React from \"react\";\r\n\r\nconst ErrorIndicator = () => {\r\n  return <div>Something going wrong....</div>;\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import ErrorBoundry from \"./error-boundry\";\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from \"react\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nexport default class ErrorBoundry extends Component {\r\n  state = {\r\n    hasError: false,\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state;\r\n    const { children } = this.props;\r\n\r\n    if (hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return children;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst {\r\n  Provider: WeatherServiceProvider,\r\n  Consumer: WeatherServiceConsumer,\r\n} = React.createContext();\r\n\r\nexport { WeatherServiceProvider, WeatherServiceConsumer };\r\n","import WeatherService from \"./weather-service\";\r\n\r\nexport default WeatherService;\r\n","export default class WeatherService {\r\n  _apiBase = \"https://api.openweathermap.org/data/2.5\";\r\n  _apiKey = \"8a9238f7118a7ebc926a12bc8101dfe5\";\r\n\r\n  getResource = async (url, city) => {\r\n    const res = await fetch(\r\n      `${this._apiBase}${url}${city}&appid=${this._apiKey}&units=metric&lang=ru`\r\n    );\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}, received ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n  };\r\n\r\n  fetchCurrentWeather = async (city) => {\r\n    const res = await this.getResource(\"/weather?q=\", city);\r\n\r\n    return this._transformCurrentWeather(res);\r\n  };\r\n\r\n  fetchFiveDaysWeather = async (city) => {\r\n    const res = await this.getResource(\"/forecast?q=\", city);\r\n\r\n    return res.list.map(this._transformFiveDaysWeather);\r\n  };\r\n\r\n  _transformCurrentWeather = (res) => {\r\n    return {\r\n      id: res.id,\r\n      city: res.name,\r\n      time: res.dt * 1000,\r\n      temp: Math.round(res.main.temp),\r\n      pressure: res.main.pressure,\r\n      humidity: res.main.humidity,\r\n      clouds: res.weather[0].description,\r\n      cloudsIcon: `http://openweathermap.org/img/w/${res.weather[0].icon}.png`,\r\n      wind: Math.round(res.wind.speed),\r\n    };\r\n  };\r\n\r\n  _transformFiveDaysWeather = (res) => {\r\n    return {\r\n      time: res.dt_txt,\r\n      temp: Math.round(res.main.temp),\r\n      pressure: res.main.pressure,\r\n      humidity: res.main.humidity,\r\n      clouds: res.weather[0].description,\r\n      wind: Math.round(res.wind.speed),\r\n    };\r\n  };\r\n}\r\n","import Header from \"./header\";\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"row mb-3\">\r\n      <h1 className=\"col-sm text-center\">React-Redux Weather App</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const weatherRequest = () => {\r\n  return {\r\n    type: 'FETCH_WEATHER_REQUEST',\r\n  };\r\n};\r\n\r\nconst getCurrentWeather = (currentWeather) => {\r\n  return {\r\n    type: 'FETCH_CURRENT_WEATHER',\r\n    payload: currentWeather,\r\n  };\r\n};\r\n\r\nconst getFiveDaysWeather = (weather) => {\r\n  return {\r\n    type: 'FETCH_FIVE_DAYS_WEATHER',\r\n    payload: weather,\r\n  };\r\n};\r\n\r\nconst onChangeInputCity = (e) => {\r\n  return {\r\n    type: 'ON_CHANGE_INPUT_CITY',\r\n    payload: e.target.value,\r\n  };\r\n};\r\n\r\nconst onSumbitCity = (city) => {\r\n  return {\r\n    type: 'ON_SUBMIT_CITY',\r\n    payload: city,\r\n  };\r\n};\r\n\r\nconst weatherError = () => {\r\n  return {\r\n    type: 'FETCH_WEATHER_FAILURE',\r\n  };\r\n};\r\n\r\nexport {\r\n  weatherRequest,\r\n  getCurrentWeather,\r\n  getFiveDaysWeather,\r\n  onChangeInputCity,\r\n  onSumbitCity,\r\n  weatherError,\r\n};\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { onChangeInputCity, onSumbitCity } from '../../actions';\r\n\r\nimport './form-weather.css';\r\n\r\nconst FormWeather = (props) => {\r\n  const { inputCityValue, onChangeInputCity, onSumbitCity } = props;\r\n\r\n  const onSubmitHandler = (evt) => {\r\n    evt.preventDefault();\r\n    onSumbitCity(inputCityValue);\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={onSubmitHandler}\r\n      className='form-inline col-12 justify-content-center'>\r\n      <label>\r\n        Введите город\r\n        <input\r\n          type='text'\r\n          className='form-control ml-1 mr-2'\r\n          value={inputCityValue}\r\n          onChange={onChangeInputCity}\r\n        />\r\n      </label>\r\n      <input type='submit' className='btn btn-outline-info search' value='' />\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    inputCityValue: state.inputCityValue,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  onChangeInputCity,\r\n  onSumbitCity,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FormWeather);\r\n","import FormWeather from \"./form-weather\";\r\n\r\nexport default FormWeather;\r\n","import Spinner from \"./spinner\";\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport \"./spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"row justify-content-center\">\r\n      <div className=\"loadingio-spinner-spinner-d7y3ytu4a5\">\r\n        <div className=\"ldio-xk70y4k1kn\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import withWeatherService from \"./with-weather-service\";\r\n\r\nexport default withWeatherService;","import React from \"react\";\r\nimport { WeatherServiceConsumer } from \"../weather-service-context\";\r\n\r\nconst withWeatherService = (Wrapped) => {\r\n  return (props) => {\r\n    return (\r\n      <WeatherServiceConsumer>\r\n        {(weatherService) => {\r\n          return <Wrapped {...props} weatherService={weatherService} />;\r\n        }}\r\n      </WeatherServiceConsumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withWeatherService;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport Spinner from '../spinner';\r\nimport { weatherRequest, getCurrentWeather, weatherError } from '../../actions';\r\nimport withWeatherService from '../hoc';\r\n\r\nconst CurrentWeather = ({ data }) => {\r\n  const getWeatherTime = (timeStamp) => {\r\n    const date = new Date(timeStamp);\r\n\r\n    let hour = date.getHours();\r\n    let minutes = date.getMinutes();\r\n\r\n    hour = hour < 10 ? '0' + hour : hour;\r\n    minutes = minutes < 10 ? '0' + minutes : minutes;\r\n\r\n    return `${hour}:${minutes}`;\r\n  };\r\n\r\n  return (\r\n    <div className='col-12 mt-3'>\r\n      <h3 className='text-center'>\r\n        В городе {data.city} {data.clouds}\r\n        <img src={`${data.cloudsIcon}`} alt='weather-icon' />\r\n      </h3>\r\n      <p className='text-center mb-0'>\r\n        данные о погоде на {getWeatherTime(data.time)}\r\n      </p>\r\n      <ul className='list-group col-4 m-auto'>\r\n        <li className='list-group-item bg-secondary text-white'>\r\n          Температура: {data.temp} &#8451;\r\n        </li>\r\n        <li className='list-group-item bg-secondary text-white'>\r\n          Влажность: {data.humidity} &#37;\r\n        </li>\r\n        <li className='list-group-item bg-secondary text-white'>\r\n          Скорость ветра: {data.wind} &#13223;\r\n        </li>\r\n        <li className='list-group-item bg-secondary text-white'>\r\n          Давление: {data.pressure} &#13169;\r\n        </li>\r\n      </ul>\r\n      <div className='text-center'>\r\n        <Link className='btn btn-primary mt-3' to='/five-days-weather'>\r\n          Посмотреть погоду на 5 дней\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nclass CurrentWeatherContainer extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.city !== this.props.city) {\r\n      this.props.weatherRequest();\r\n\r\n      this.props.weatherService\r\n        .fetchCurrentWeather(this.props.city)\r\n        .then((data) => {\r\n          this.props.getCurrentWeather(data);\r\n        })\r\n        .catch((error) => {\r\n          this.props.weatherError();\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { data, loading, error } = this.props;\r\n\r\n    if (error) {\r\n      return (\r\n        <div className='col-12 mt-3'>\r\n          <h4 className='text-center text-danger'>\r\n            Погоды по этому пункту, к сожалению, на сайте нет.\r\n          </h4>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    if (loading) {\r\n      return <Spinner />;\r\n    }\r\n\r\n    if (data.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    return <CurrentWeather data={data} />;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ city, data, loading, error }) => {\r\n  return {\r\n    city,\r\n    data,\r\n    loading,\r\n    error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  weatherRequest,\r\n  getCurrentWeather,\r\n  weatherError,\r\n};\r\n\r\nexport default withWeatherService(\r\n  connect(mapStateToProps, mapDispatchToProps)(CurrentWeatherContainer)\r\n);\r\n","import CurrentWeather from \"./current-weather\";\r\n\r\nexport default CurrentWeather;\r\n","import WeatherPage from \"./weather-page\";\r\n\r\nexport default WeatherPage;\r\n","import React from \"react\";\r\nimport FormWeather from \"../form-weather\";\r\nimport CurrentWeather from \"../current-weather\";\r\n\r\nconst WeatherPage = () => {\r\n  return (\r\n    <div className=\"row justify-content-center\">\r\n      <FormWeather />\r\n      <CurrentWeather />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherPage;\r\n","import React, { Component } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport withWeatherService from '../hoc';\r\nimport {\r\n  weatherRequest,\r\n  getFiveDaysWeather,\r\n  weatherError,\r\n} from '../../actions';\r\nimport Spinner from '../spinner';\r\n\r\nclass FiveDaysWeather extends Component {\r\n  componentDidMount() {\r\n    const {\r\n      city,\r\n      weatherRequest,\r\n      weatherService,\r\n      getFiveDaysWeather,\r\n      weatherError,\r\n    } = this.props;\r\n\r\n    if (city) {\r\n      weatherRequest();\r\n      weatherService\r\n        .fetchFiveDaysWeather(city)\r\n        .then((data) => {\r\n          getFiveDaysWeather(data);\r\n        })\r\n        .catch((error) => {\r\n          weatherError();\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { city, multiData, error, loading } = this.props;\r\n\r\n    if (!city || error) {\r\n      return <Redirect to='/' />;\r\n    }\r\n\r\n    if (loading) {\r\n      return <Spinner />;\r\n    }\r\n\r\n    const renderRow = (item, idx) => {\r\n      const { time, temp, pressure, humidity, wind, clouds } = item;\r\n      return (\r\n        <tr key={idx}>\r\n          <td>{time}</td>\r\n          <td>{temp}</td>\r\n          <td>{pressure}</td>\r\n          <td>{humidity}</td>\r\n          <td>{wind}</td>\r\n          <td>{clouds}</td>\r\n        </tr>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div className='row'>\r\n        <h2 className='col-12 text-center'>Погода в городе {city}</h2>\r\n        <Link to='/' role='button' className='btn btn-dark'>\r\n          На главную\r\n        </Link>\r\n        <table className='table table-hover table-dark'>\r\n          <thead>\r\n            <tr>\r\n              <th>Дата</th>\r\n              <th>Температура &#8451;</th>\r\n              <th>Давление &#13169;</th>\r\n              <th>Влажность &#37;</th>\r\n              <th>Ветер &#13223;</th>\r\n              <th>Небо</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{multiData.map(renderRow)}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ city, multiData, loading, error }) => {\r\n  return {\r\n    city,\r\n    multiData,\r\n    loading,\r\n    error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  weatherRequest,\r\n  getFiveDaysWeather,\r\n  weatherError,\r\n};\r\n\r\nexport default withWeatherService(\r\n  connect(mapStateToProps, mapDispatchToProps)(FiveDaysWeather)\r\n);\r\n","import FiveDaysWeather from \"./five-days-weather\";\r\n\r\nexport default FiveDaysWeather;\r\n","import App from \"./app\";\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport Header from \"../header\";\r\nimport WeatherPage from \"../weather-page\";\r\nimport FiveDaysWeather from \"../five-days-weather\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"container\">\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={WeatherPage} />\r\n        <Route path=\"/five-days-weather\" component={FiveDaysWeather} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nimport ErrorBoundry from './components/error-boundry';\r\nimport { WeatherServiceProvider } from './components/weather-service-context';\r\nimport WeatherService from './services';\r\nimport { HashRouter as Router } from 'react-router-dom';\r\nimport App from './components/app';\r\n\r\nconst weatherService = new WeatherService();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <ErrorBoundry>\r\n        <WeatherServiceProvider value={weatherService}>\r\n          <Router>\r\n            <App />\r\n          </Router>\r\n        </WeatherServiceProvider>\r\n      </ErrorBoundry>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}
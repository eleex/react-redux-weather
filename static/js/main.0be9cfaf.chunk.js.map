{"version":3,"sources":["reducer/index.js","store.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","components/weather-service-context/weather-service-context.js","services/index.js","services/weather-service.js","components/header/index.js","components/header/header.js","actions/index.js","components/hoc/index.js","components/hoc/with-weather-service.js","components/form-weather/form-weather.js","components/form-weather/index.js","components/spinner/index.js","components/spinner/spinner.js","components/current-weather/current-weather.js","components/current-weather/index.js","components/weather-page/index.js","components/weather-page/weather-page.js","components/five-days-weather/five-days-weather.js","components/five-days-weather/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["initialState","data","multiData","inputCityValue","loading","error","reducer","state","action","type","payload","store","createStore","ErrorIndicator","ErrorBoundry","hasError","this","setState","children","props","Component","React","createContext","WeatherServiceProvider","Provider","WeatherServiceConsumer","Consumer","WeatherService","_apiBase","_apiKey","getResource","url","city","a","fetch","res","ok","Error","status","json","fetchCurrentWeather","_transformCurrentWeather","fetchFiveDaysWeather","list","map","_transformFiveDaysWeather","id","name","time","dt","temp","Math","round","main","pressure","humidity","clouds","weather","description","cloudsIcon","icon","wind","speed","dt_txt","Header","className","weatherRequest","weatherError","withWeatherService","Wrapped","weatherService","mapDispatchToProps","onChangeInputCity","e","target","value","getCurrentWeather","currentWeather","FormWeather","connect","dataCity","onSubmit","evt","preventDefault","prev","interval","Date","now","then","catch","onChange","Spinner","CurrentWeather","src","alt","timeStamp","date","hour","getHours","minutes","getMinutes","getWeatherTime","to","length","WeatherPage","FiveDaysWeather","getFiveDaysWeather","role","item","idx","key","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAAMA,EAAe,CACnBC,KAAM,GACNC,UAAW,GACXC,eAAgB,GAChBC,SAAS,EACTC,OAAO,GA8CMC,EA3CC,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAChD,OAAQA,EAAOC,MACb,IAAK,wBACH,OAAO,eACFF,EADL,CAEEH,SAAS,EACTC,MAAO,OAGX,IAAK,wBACH,OAAO,eACFE,EADL,CAEEN,KAAMO,EAAOE,QACbN,SAAS,EACTC,OAAO,IAGX,IAAK,0BACH,OAAO,eACFE,EADL,CAEEL,UAAWM,EAAOE,QAClBN,SAAS,EACTC,OAAO,IAGX,IAAK,wBACH,OAAO,eACFE,EADL,CAEEH,SAAS,EACTC,OAAO,IAGX,IAAK,uBACH,OAAO,eACFE,EADL,CAEEJ,eAAgBK,EAAOE,UAG3B,QACE,OAAOH,ICzCEI,EAFDC,YAAYN,G,gCCFXO,ECAQ,WACrB,OAAO,2DCDMC,E,4MCEbP,MAAQ,CACNQ,UAAU,G,kEAIVC,KAAKC,SAAS,CAAEF,UAAU,M,+BAGlB,IACAA,EAAaC,KAAKT,MAAlBQ,SACAG,EAAaF,KAAKG,MAAlBD,SAER,OAAIH,EACK,kBAAC,EAAD,MAGFG,M,GAjB+BE,a,ECEtCC,IAAMC,gBAFEC,E,EAAVC,SACUC,E,EAAVC,S,wBCFaC,E,iDCDbC,SAAW,0C,KACXC,QAAU,mC,KAEVC,Y,uCAAc,WAAOC,EAAKC,GAAZ,eAAAC,EAAA,sEACMC,MAAM,GAAD,OAClB,EAAKN,UADa,OACFG,GADE,OACIC,EADJ,kBACkB,EAAKH,QADvB,0BADX,WACNM,EADM,QAKHC,GALG,sBAMJ,IAAIC,MAAJ,0BAA6BN,EAA7B,sBAA8CI,EAAIG,SAN9C,uBASCH,EAAII,OATL,mF,6DAYdC,oB,uCAAsB,WAAOR,GAAP,eAAAC,EAAA,sEACF,EAAKH,YAAY,cAAeE,GAD9B,cACdG,EADc,yBAGb,EAAKM,yBAAyBN,IAHjB,2C,2DAMtBO,qB,uCAAuB,WAAOV,GAAP,eAAAC,EAAA,sEACH,EAAKH,YAAY,eAAgBE,GAD9B,cACfG,EADe,yBAGdA,EAAIQ,KAAKC,IAAI,EAAKC,4BAHJ,2C,2DAMvBJ,yBAA2B,SAACN,GAC1B,MAAO,CACLW,GAAIX,EAAIW,GACRd,KAAMG,EAAIY,KACVC,KAAe,IAATb,EAAIc,GACVC,KAAMC,KAAKC,MAAMjB,EAAIkB,KAAKH,MAC1BI,SAAUnB,EAAIkB,KAAKC,SACnBC,SAAUpB,EAAIkB,KAAKE,SACnBC,OAAQrB,EAAIsB,QAAQ,GAAGC,YACvBC,WAAW,mCAAD,OAAqCxB,EAAIsB,QAAQ,GAAGG,KAApD,QACVC,KAAMV,KAAKC,MAAMjB,EAAI0B,KAAKC,S,KAI9BjB,0BAA4B,SAACV,GAC3B,MAAO,CACLa,KAAMb,EAAI4B,OACVb,KAAMC,KAAKC,MAAMjB,EAAIkB,KAAKH,MAC1BI,SAAUnB,EAAIkB,KAAKC,SACnBC,SAAUpB,EAAIkB,KAAKE,SACnBC,OAAQrB,EAAIsB,QAAQ,GAAGC,YACvBG,KAAMV,KAAKC,MAAMjB,EAAI0B,KAAKC,U,OC/CjBE,ECAA,WACb,OACE,yBAAKC,UAAU,YACb,wBAAIA,UAAU,sBAAd,6BCLAC,EAAiB,WACrB,MAAO,CACLzD,KAAM,0BAyBJ0D,EAAe,WACnB,MAAO,CACL1D,KAAM,0BC3BK2D,ECCY,SAACC,GAC1B,OAAO,SAAClD,GACN,OACE,kBAACM,EAAD,MACG,SAAC6C,GACA,OAAO,kBAACD,EAAD,iBAAalD,EAAb,CAAoBmD,eAAgBA,UCuE/CC,G,MAAqB,CACzBL,iBACAM,kBH7DwB,SAACC,GACzB,MAAO,CACLhE,KAAM,uBACNC,QAAS+D,EAAEC,OAAOC,QG2DpBC,kBH5EwB,SAACC,GACzB,MAAO,CACLpE,KAAM,wBACNC,QAASmE,IG0EXV,iBCjFaW,EDoFAV,EACbW,aAjBsB,SAACxE,GACvB,MAAO,CACLJ,eAAgBI,EAAMJ,eACtB6E,SAAUzE,EAAMN,KAAK+B,KACrBgB,KAAMzC,EAAMN,KAAK+C,KACjB5C,QAASG,EAAMH,WAYQmE,EAAzBQ,EA3EkB,SAAC5D,GAAW,IAE5BhB,EAQEgB,EARFhB,eACA6E,EAOE7D,EAPF6D,SACAhC,EAME7B,EANF6B,KACAwB,EAKErD,EALFqD,kBACAN,EAIE/C,EAJF+C,eACAU,EAGEzD,EAHFyD,kBACAT,EAEEhD,EAFFgD,aACAG,EACEnD,EADFmD,eA8BF,OACE,0BACEW,SA7Ba,SAACC,GAChBA,EAAIC,iBAEJ,IAA0BC,EAAMC,EAQ5BL,IAAa7E,IARSiF,EAQ0BpC,EARpBqC,EAQ0B,EAHjDA,GAJMC,KAAKC,MAAQ,IAAID,KAAKF,IAEhB,OASrBlB,IAEAI,EACG9B,oBAAoBrC,GACpBqF,MAAK,SAACvF,GACL2E,EAAkB3E,MAEnBwF,OAAM,SAACpF,GACN8D,SAOFF,UAAU,6CAEV,2GAEE,2BACExD,KAAK,OACLwD,UAAU,yBACVU,MAAOxE,EACPuF,SAAUlB,KAGd,2BAAO/D,KAAK,SAASwD,UAAU,8BAA8BU,MAAM,UE/D1DgB,G,MCCC,WACd,OACE,yBAAK1B,UAAU,8BACb,yBAAKA,UAAU,wCACb,yBAAKA,UAAU,mBACb,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,8BACA,mCCdJ2B,EAAiB,SAAC,GAAc,IAAZ3F,EAAW,EAAXA,KAaxB,OACE,yBAAKgE,UAAU,eACb,wBAAIA,UAAU,eAAd,+CACYhE,EAAK+B,KADjB,IACwB/B,EAAKuD,OAC3B,yBAAKqC,IAAG,UAAK5F,EAAK0D,YAAcmC,IAAI,kBAEtC,uBAAG7B,UAAU,oBAAb,iGAlBmB,SAAC8B,GACtB,IAAMC,EAAO,IAAIV,KAAKS,GAElBE,EAAOD,EAAKE,WACZC,EAAUH,EAAKI,aAKnB,OAFAD,EAAUA,EAAU,GAAK,IAAMA,EAAUA,EAEnC,GAAN,OAHAF,EAAOA,EAAO,GAAK,IAAMA,EAAOA,EAGhC,YAAkBE,GAUME,CAAepG,EAAK+C,OAE1C,wBAAIiB,UAAU,2BACZ,wBAAIA,UAAU,mBAAd,uEAA8ChE,EAAKiD,KAAnD,WACA,wBAAIe,UAAU,mBAAd,2DAA4ChE,EAAKsD,SAAjD,MACA,wBAAIU,UAAU,mBAAd,oFACmBhE,EAAK4D,KADxB,WAGA,wBAAII,UAAU,mBAAd,qDAA2ChE,EAAKqD,SAAhD,YAEF,yBAAKW,UAAU,eACb,kBAAC,IAAD,CACEA,UAAU,uBACVqC,GAAG,sBAFL,gJClCOV,ED6EAb,aARS,SAAC,GACvB,MAAO,CACL9E,KAFkD,EAA3BA,KAGvBG,QAHkD,EAArBA,QAI7BC,MAJkD,EAAZA,SAQ3B0E,EAhCiB,SAAC5D,GAAW,IAClClB,EAAyBkB,EAAzBlB,KAAMG,EAAmBe,EAAnBf,QAEd,OAFiCe,EAAVd,MAInB,yBAAK4D,UAAU,eACb,wBAAIA,UAAU,2BAAd,0PAOF7D,EACK,kBAAC,EAAD,MAGW,IAAhBH,EAAKsG,OACA,KAGF,kBAAC,EAAD,CAAgBtG,KAAMA,OElEhBuG,ECEK,WAClB,OACE,yBAAKvC,UAAU,8BACb,kBAAC,EAAD,MACA,kBAAC,EAAD,Q,OCGAwC,E,kLACiB,IAAD,EAOdzF,KAAKG,MALPa,EAFgB,EAEhBA,KACAkC,EAHgB,EAGhBA,eACAI,EAJgB,EAIhBA,eACAoC,EALgB,EAKhBA,mBACAvC,EANgB,EAMhBA,aAGEnC,IACFkC,IACAI,EACG5B,qBAAqBV,GACrBwD,MAAK,SAACvF,GACLyG,EAAmBzG,MAEpBwF,OAAM,SAACpF,GACN8D,U,+BAKE,IAAD,EACqCnD,KAAKG,MAAzCa,EADD,EACCA,KAAM9B,EADP,EACOA,UAAWG,EADlB,EACkBA,MAAOD,EADzB,EACyBA,QAEhC,IAAK4B,GAAQ3B,EACX,OAAO,kBAAC,IAAD,CAAUiG,GAAG,MAGtB,GAAIlG,EACF,OAAO,kBAAC,EAAD,MAiBT,OACE,yBAAK6D,UAAU,OACb,wBAAIA,UAAU,sBAAd,oFAAoDjC,GACpD,kBAAC,IAAD,CAAMsE,GAAG,IAAIK,KAAK,SAAS1C,UAAU,gBAArC,2DAGA,2BAAOA,UAAU,gCACf,+BACE,4BACE,wDACA,yGACA,uFACA,wFACA,qEACA,0DAGJ,+BAAQ/D,EAAU0C,KA/BN,SAACgE,EAAMC,GAAS,IACxB7D,EAAiD4D,EAAjD5D,KAAME,EAA2C0D,EAA3C1D,KAAMI,EAAqCsD,EAArCtD,SAAUC,EAA2BqD,EAA3BrD,SAAUM,EAAiB+C,EAAjB/C,KAAML,EAAWoD,EAAXpD,OAC9C,OACE,wBAAIsD,IAAKD,GACP,4BAAK7D,GACL,4BAAKE,GACL,4BAAKI,GACL,4BAAKC,GACL,4BAAKM,GACL,4BAAKL,c,GA3CepC,aAiFxBmD,EAAqB,CACzBL,iBACAwC,mBXjFyB,SAACjD,GAC1B,MAAO,CACLhD,KAAM,0BACNC,QAAS+C,IW+EXU,gBC7FasC,EDgGArC,EACbW,aAhBsB,SAAC,GACvB,MAAO,CACL/C,KAFuE,EAAhD/B,KAAQ+B,KAG/B9B,UAHuE,EAAhCA,UAIvCE,QAJuE,EAArBA,QAKlDC,MALuE,EAAZA,SAgBpCkE,EAAzBQ,CAA6C0B,IEjGhCM,ECIH,WAEV,OACE,yBAAK9C,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAO+C,OAAK,EAACC,KAAK,IAAIC,UAAWV,IACjC,kBAAC,IAAD,CAAOS,KAAK,qBAAqBC,UAAWT,MCD5CnC,EAAiB,IAAI3C,EAE3BwF,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAU1G,MAAOA,GACf,kBAAC,EAAD,KACE,kBAACY,EAAD,CAAwBoD,MAAOL,GAC7B,kBAAC,IAAD,KACE,kBAAC,EAAD,WAMVgD,SAASC,eAAe,W","file":"static/js/main.0be9cfaf.chunk.js","sourcesContent":["const initialState = {\r\n  data: [],\r\n  multiData: [],\r\n  inputCityValue: \"\",\r\n  loading: false,\r\n  error: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_WEATHER_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n\r\n    case \"FETCH_CURRENT_WEATHER\":\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n        loading: false,\r\n        error: false,\r\n      };\r\n\r\n    case \"FETCH_FIVE_DAYS_WEATHER\":\r\n      return {\r\n        ...state,\r\n        multiData: action.payload,\r\n        loading: false,\r\n        error: false,\r\n      };\r\n\r\n    case \"FETCH_WEATHER_FAILURE\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true,\r\n      };\r\n\r\n    case \"ON_CHANGE_INPUT_CITY\":\r\n      return {\r\n        ...state,\r\n        inputCityValue: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore } from \"redux\";\r\n\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import ErrorIndicator from \"./error-indicator\";\r\n\r\nexport default ErrorIndicator;\r\n","import React from \"react\";\r\n\r\nconst ErrorIndicator = () => {\r\n  return <div>Something going wrong....</div>;\r\n};\r\n\r\nexport default ErrorIndicator;\r\n","import ErrorBoundry from \"./error-boundry\";\r\n\r\nexport default ErrorBoundry;\r\n","import React, { Component } from \"react\";\r\nimport ErrorIndicator from \"../error-indicator\";\r\n\r\nexport default class ErrorBoundry extends Component {\r\n  state = {\r\n    hasError: false,\r\n  };\r\n\r\n  componentDidCatch() {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state;\r\n    const { children } = this.props;\r\n\r\n    if (hasError) {\r\n      return <ErrorIndicator />;\r\n    }\r\n\r\n    return children;\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nconst {\r\n  Provider: WeatherServiceProvider,\r\n  Consumer: WeatherServiceConsumer,\r\n} = React.createContext();\r\n\r\nexport { WeatherServiceProvider, WeatherServiceConsumer };\r\n","import WeatherService from \"./weather-service\";\r\n\r\nexport default WeatherService;\r\n","export default class WeatherService {\r\n  _apiBase = \"https://api.openweathermap.org/data/2.5\";\r\n  _apiKey = \"8a9238f7118a7ebc926a12bc8101dfe5\";\r\n\r\n  getResource = async (url, city) => {\r\n    const res = await fetch(\r\n      `${this._apiBase}${url}${city}&appid=${this._apiKey}&units=metric&lang=ru`\r\n    );\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}, received ${res.status}`);\r\n    }\r\n\r\n    return await res.json();\r\n  };\r\n\r\n  fetchCurrentWeather = async (city) => {\r\n    const res = await this.getResource(\"/weather?q=\", city);\r\n\r\n    return this._transformCurrentWeather(res);\r\n  };\r\n\r\n  fetchFiveDaysWeather = async (city) => {\r\n    const res = await this.getResource(\"/forecast?q=\", city);\r\n\r\n    return res.list.map(this._transformFiveDaysWeather);\r\n  };\r\n\r\n  _transformCurrentWeather = (res) => {\r\n    return {\r\n      id: res.id,\r\n      city: res.name,\r\n      time: res.dt * 1000,\r\n      temp: Math.round(res.main.temp),\r\n      pressure: res.main.pressure,\r\n      humidity: res.main.humidity,\r\n      clouds: res.weather[0].description,\r\n      cloudsIcon: `http://openweathermap.org/img/w/${res.weather[0].icon}.png`,\r\n      wind: Math.round(res.wind.speed),\r\n    };\r\n  };\r\n\r\n  _transformFiveDaysWeather = (res) => {\r\n    return {\r\n      time: res.dt_txt,\r\n      temp: Math.round(res.main.temp),\r\n      pressure: res.main.pressure,\r\n      humidity: res.main.humidity,\r\n      clouds: res.weather[0].description,\r\n      wind: Math.round(res.wind.speed),\r\n    };\r\n  };\r\n}\r\n","import Header from \"./header\";\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"row mb-3\">\r\n      <h1 className=\"col-sm text-center\">React-Redux Weather App</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","const weatherRequest = () => {\r\n  return {\r\n    type: \"FETCH_WEATHER_REQUEST\",\r\n  };\r\n};\r\n\r\nconst getCurrentWeather = (currentWeather) => {\r\n  return {\r\n    type: \"FETCH_CURRENT_WEATHER\",\r\n    payload: currentWeather,\r\n  };\r\n};\r\n\r\nconst getFiveDaysWeather = (weather) => {\r\n  return {\r\n    type: \"FETCH_FIVE_DAYS_WEATHER\",\r\n    payload: weather,\r\n  };\r\n};\r\n\r\nconst onChangeInputCity = (e) => {\r\n  return {\r\n    type: \"ON_CHANGE_INPUT_CITY\",\r\n    payload: e.target.value,\r\n  };\r\n};\r\n\r\nconst weatherError = () => {\r\n  return {\r\n    type: \"FETCH_WEATHER_FAILURE\",\r\n  };\r\n};\r\n\r\nexport {\r\n  weatherRequest,\r\n  getCurrentWeather,\r\n  getFiveDaysWeather,\r\n  onChangeInputCity,\r\n  weatherError,\r\n};\r\n","import withWeatherService from \"./with-weather-service\";\r\n\r\nexport default withWeatherService;","import React from \"react\";\r\nimport { WeatherServiceConsumer } from \"../weather-service-context\";\r\n\r\nconst withWeatherService = (Wrapped) => {\r\n  return (props) => {\r\n    return (\r\n      <WeatherServiceConsumer>\r\n        {(weatherService) => {\r\n          return <Wrapped {...props} weatherService={weatherService} />;\r\n        }}\r\n      </WeatherServiceConsumer>\r\n    );\r\n  };\r\n};\r\n\r\nexport default withWeatherService;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  onChangeInputCity,\r\n  weatherRequest,\r\n  getCurrentWeather,\r\n  weatherError,\r\n} from \"../../actions\";\r\nimport withWeatherService from \"../hoc\";\r\n\r\nimport \"./form-weather.css\";\r\n\r\nconst FormWeather = (props) => {\r\n  const {\r\n    inputCityValue,\r\n    dataCity,\r\n    time,\r\n    onChangeInputCity,\r\n    weatherRequest,\r\n    getCurrentWeather,\r\n    weatherError,\r\n    weatherService,\r\n  } = props;\r\n\r\n  const onSubmit = (evt) => {\r\n    evt.preventDefault();\r\n\r\n    const isMoreMinutesAgo = (prev, interval) => {\r\n      const diff = Date.now() - new Date(prev);\r\n\r\n      const minAgo = diff / (60 * 1000);\r\n\r\n      return interval > minAgo;\r\n    };\r\n\r\n    if (dataCity === inputCityValue && isMoreMinutesAgo(time, 5)) {\r\n      return;\r\n    }\r\n\r\n    weatherRequest();\r\n\r\n    weatherService\r\n      .fetchCurrentWeather(inputCityValue)\r\n      .then((data) => {\r\n        getCurrentWeather(data);\r\n      })\r\n      .catch((error) => {\r\n        weatherError();\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      onSubmit={onSubmit}\r\n      className=\"form-inline col-12 justify-content-center\"\r\n    >\r\n      <label>\r\n        Введите город\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control ml-1 mr-2\"\r\n          value={inputCityValue}\r\n          onChange={onChangeInputCity}\r\n        />\r\n      </label>\r\n      <input type=\"submit\" className=\"btn btn-outline-info search\" value=\"\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    inputCityValue: state.inputCityValue,\r\n    dataCity: state.data.city,\r\n    time: state.data.time,\r\n    loading: state.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  weatherRequest,\r\n  onChangeInputCity,\r\n  getCurrentWeather,\r\n  weatherError,\r\n};\r\n\r\nexport default withWeatherService(\r\n  connect(mapStateToProps, mapDispatchToProps)(FormWeather)\r\n);\r\n","import FormWeather from \"./form-weather\";\r\n\r\nexport default FormWeather;\r\n","import Spinner from \"./spinner\";\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport \"./spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"row justify-content-center\">\r\n      <div className=\"loadingio-spinner-spinner-d7y3ytu4a5\">\r\n        <div className=\"ldio-xk70y4k1kn\">\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Spinner from \"../spinner\";\r\n\r\nconst CurrentWeather = ({ data }) => {\r\n  const getWeatherTime = (timeStamp) => {\r\n    const date = new Date(timeStamp);\r\n\r\n    let hour = date.getHours();\r\n    let minutes = date.getMinutes();\r\n\r\n    hour = hour < 10 ? \"0\" + hour : hour;\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n\r\n    return `${hour}:${minutes}`;\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-12 mt-3\">\r\n      <h3 className=\"text-center\">\r\n        В городе {data.city} {data.clouds}\r\n        <img src={`${data.cloudsIcon}`} alt=\"weather-icon\" />\r\n      </h3>\r\n      <p className=\"text-center mb-0\">\r\n        данные о погоде на {getWeatherTime(data.time)}\r\n      </p>\r\n      <ul className=\"list-group col-4 m-auto\">\r\n        <li className=\"list-group-item\">Температура: {data.temp} &#8451;</li>\r\n        <li className=\"list-group-item\">Влажность: {data.humidity} &#37;</li>\r\n        <li className=\"list-group-item\">\r\n          Скорость ветра: {data.wind} &#13223;\r\n        </li>\r\n        <li className=\"list-group-item\">Давление: {data.pressure} &#13169;</li>\r\n      </ul>\r\n      <div className=\"text-center\">\r\n        <Link\r\n          className=\"btn btn-primary mt-3\"\r\n          to=\"/five-days-weather\"\r\n        >\r\n          Посмотреть погоду на 5 дней\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst CurrentWeatherContainer = (props) => {\r\n  const { data, loading, error } = props;\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"col-12 mt-3\">\r\n        <h4 className=\"text-center text-danger\">\r\n          Погоды по этому пункту, к сожалению, на сайте нет.\r\n        </h4>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (loading) {\r\n    return <Spinner />;\r\n  }\r\n\r\n  if (data.length === 0) {\r\n    return null;\r\n  }\r\n\r\n  return <CurrentWeather data={data} />;\r\n};\r\n\r\nconst mapStateToProps = ({ data, loading, error }) => {\r\n  return {\r\n    data,\r\n    loading,\r\n    error,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CurrentWeatherContainer);\r\n","import CurrentWeather from \"./current-weather\";\r\n\r\nexport default CurrentWeather;\r\n","import WeatherPage from \"./weather-page\";\r\n\r\nexport default WeatherPage;\r\n","import React from \"react\";\r\nimport FormWeather from \"../form-weather\";\r\nimport CurrentWeather from \"../current-weather\";\r\n\r\nconst WeatherPage = () => {\r\n  return (\r\n    <div className=\"row justify-content-center\">\r\n      <FormWeather />\r\n      <CurrentWeather />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherPage;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport withWeatherService from \"../hoc\";\r\nimport {\r\n  weatherRequest,\r\n  getFiveDaysWeather,\r\n  weatherError,\r\n} from \"../../actions\";\r\nimport Spinner from \"../spinner\";\r\n\r\nclass FiveDaysWeather extends Component {\r\n  componentDidMount() {\r\n    const {\r\n      city,\r\n      weatherRequest,\r\n      weatherService,\r\n      getFiveDaysWeather,\r\n      weatherError,\r\n    } = this.props;\r\n\r\n    if (city) {\r\n      weatherRequest();\r\n      weatherService\r\n        .fetchFiveDaysWeather(city)\r\n        .then((data) => {\r\n          getFiveDaysWeather(data);\r\n        })\r\n        .catch((error) => {\r\n          weatherError();\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { city, multiData, error, loading } = this.props;\r\n\r\n    if (!city || error) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    if (loading) {\r\n      return <Spinner />;\r\n    }\r\n\r\n    const renderRow = (item, idx) => {\r\n      const { time, temp, pressure, humidity, wind, clouds } = item;\r\n      return (\r\n        <tr key={idx}>\r\n          <td>{time}</td>\r\n          <td>{temp}</td>\r\n          <td>{pressure}</td>\r\n          <td>{humidity}</td>\r\n          <td>{wind}</td>\r\n          <td>{clouds}</td>\r\n        </tr>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <h2 className=\"col-12 text-center\">Погода в городе {city}</h2>\r\n        <Link to=\"/\" role=\"button\" className=\"btn btn-dark\">\r\n          На главную\r\n        </Link>\r\n        <table className=\"table table-hover table-dark\">\r\n          <thead>\r\n            <tr>\r\n              <th>Дата</th>\r\n              <th>Температура &#8451;</th>\r\n              <th>Давление &#13169;</th>\r\n              <th>Влажность &#37;</th>\r\n              <th>Ветер &#13223;</th>\r\n              <th>Небо</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>{multiData.map(renderRow)}</tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ data: { city }, multiData, loading, error }) => {\r\n  return {\r\n    city,\r\n    multiData,\r\n    loading,\r\n    error,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  weatherRequest,\r\n  getFiveDaysWeather,\r\n  weatherError,\r\n};\r\n\r\nexport default withWeatherService(\r\n  connect(mapStateToProps, mapDispatchToProps)(FiveDaysWeather)\r\n);\r\n","import FiveDaysWeather from \"./five-days-weather\";\r\n\r\nexport default FiveDaysWeather;\r\n","import App from \"./app\";\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport Header from \"../header\";\r\nimport WeatherPage from \"../weather-page\";\r\nimport FiveDaysWeather from \"../five-days-weather\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header />\r\n      <Route exact path=\"/\" component={WeatherPage} />\r\n      <Route path=\"/five-days-weather\" component={FiveDaysWeather} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport ErrorBoundry from \"./components/error-boundry\";\nimport { WeatherServiceProvider } from \"./components/weather-service-context\";\nimport WeatherService from \"./services\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from \"./components/app\";\n\nconst weatherService = new WeatherService();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ErrorBoundry>\n        <WeatherServiceProvider value={weatherService}>\n          <Router>\n            <App />\n          </Router>\n        </WeatherServiceProvider>\n      </ErrorBoundry>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}